/* 
ProxyLite Version 1.0
author saz aka True
GNU GPL-General Public License
copyright sazaam[(at)gmail.com] 2012
*/
'use strict' ;
module.exports = (function(){
	var ns = {}, __global__ = window, returnValue = function(val, name){return val },
	toStringReg = /^\[|object ?|class ?|\]$/g ,
	DOMClass = function (obj) {
	
		if(obj.constructor !== undefined && obj.constructor.prototype !== undefined) return obj.constructor ;
		var tname = obj.tagName, kl, trans = { // Prototype.js' help here
		  "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph","FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList","DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading","H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote","INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":"TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":"TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":"TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":"FrameSet", "IFRAME": "IFrame", 'DIV':'Div', 'DOCUMENT':'Document', 'HTML':'Html', 'WINDOW':'Window'
		};
		
		if(!!!tname) {
			if(obj === window){
				tname = 'WINDOW' ;
			}else
			
			for(var s in window){
				if(obj == window[s]) {
					tname = s.toUpperCase() ;
					break ;
				}
			}
		}
		
		if(trans[tname] !== undefined) kl = (tname == 'Window') ? trans[tname] : 'HTML' + trans[tname] + 'Element' ;
		else kl = tname.replace(/^(.)(.+)$/, '$1'.toUpperCase() + '$2'.toLowerCase()) ;
		if(__global__[kl] === undefined) { 
			__global__[kl] = { } ;
			__global__[kl].prototype = document.createElement(tname)['__proto__'] ;
			__global__[kl].toString = function(){ return '[object '+kl+']' } ;
		}
		return window[kl] ;
	},
	getPropertyClosure = function(val, name, obj){
		var type = typeof val ;
		switch(type){
			case 'null': case 'undefined': case 'number': case 'string': case 'boolean':
				return function(){ return (arguments.length > 0 ) ? (obj[name] = arguments[0]) : obj[name] } ; break ;
			case 'object' :
				return function(o, o2){
					if(o !== undefined ){
						var tt = typeof o, ob = obj[name] ;
						if(tt == 'string' || tt == 'number') return (o2 === undefined) ? ob[o] : (ob[o] = o2) ;
						for(var s in o)
							ob[s] = o[s] ;
						return obj[name] ;
					}else return obj[name] ;
				} ; break ;
			case 'function' : return function(){ return obj[name].apply(obj, arguments) } ; break ;
			default : return val ; break ;
		}
	} ;
	
	var Proxy = function(target, override, toClass){
		
		var obj = target, cl = target.constructor, withoutnew = (this === __global__), tobecached = false, clvars, ret, func ;
		var name_r = /function([^\(]+)/ ;
		var getctorname = function(cl, name){ return (cl = cl.match(name_r))? cl[1].replace(' ', ''):'' } ;
		tobecached = (withoutnew) ? true : false ;
		
		cl = (!!!cl) ? DOMClass(target).toString().replace(toStringReg, '') : cl.toString().replace(toStringReg, '') ;
		if(toClass === true) {
			tobecached = true ;
			cl = cl + 'Proxy' ;
		} ;
		
		
		
		if(cl.indexOf('function ') == 0) cl = cl.match(name_r)[1].replace(/^ /, '') ;
		
		// if in cache
		if(ns[cl] !== undefined && tobecached === true) {
			ret = ns[cl] ;
			return (toClass) ? ret : new ret(target) ;
		}
		
		var tg = target.constructor === Function ? target : target.constructor ;
		
		var name ;
		if(!!!tg) name = cl ;
		else name = tg == Object ? '' : (tg.name || getctorname(tg.toString())) ;
		
		func = function(tar, over){
			if(tar === undefined) { tar = target ; over = override}
			else if (tar !== target) {over = tar ; tar = target}
			else if(over === undefined){over = override}
			
			if(!!!over) {
				over = {constructor:Function('return (function '+cl+'Proxy(){}) ;')()} ;
			}
			over.protoinit = function(){
				for(var s in tar) {
					if(s == 'constructor') continue ;	
					if(s == 'toString') continue ;	
					if(s == '__proxy__') continue ;	
					
					if(s in this){}
					else
						this[s] = getPropertyClosure(tar[s], s, tar) ;
				}
			} ;
			
			var out = tar['__proxy__'] = Type.define(over) ;
			out.base = tar.constructor ;
			out.factory = tar ;
			return out ;
		} ;
		
		ret = (tobecached === true) ? (ns[cl] = func()) : func() ;
		
		return (toClass) ? ret : new ret(target) ;
	} ;
	Proxy.getProxy = function(target){ return target['__proxy__'] }
	Proxy.Class = function(t, o){return new Proxy(t, o, true) }
	return Proxy ;
})() ;



// Proxy Example

var WindowProxy = new Proxy.Class(window, {
	statics:{
		initialize:function(){
			trace('initing WindowProxy class', this) ;
			return this ;
		}
	},
	constructor:WindowProxy = function WindowProxy(over){
		trace('window proxy init') ;
		return this ;
	},
	// rewrite custom addEventListener
	bind:function bind(type, closure){
		return (!!window.attachEvent) ? 
			WindowProxy.factory.attachEvent('on'+type, closure) :
			WindowProxy.factory.addEventListener(type, closure, true) ;
	},
	unbind:function unbind(type, closure){
		return (!!window.detachEvent) ? 
			WindowProxy.factory.detachEvent('on'+type, closure) :
			WindowProxy.factory.removeEventListener(type, closure, true) ;
	},
	// rewrite custom setTimeout
	setTimeout:function setTimeout(closure, time){
		return WindowProxy.factory.setTimeout(closure, time) ;
	}
}) ;


/* creates an instance of that class , no need to re-assign proxy's target in constructor params */
var wproxy = new WindowProxy() ;

var loadclosure ;
wproxy.bind('load', loadclosure = function loadclosure(e){ // will call wproxy's override instead
	
	wproxy.unbind('load',  loadclosure) ;
	
	trace(new Proxy(location).hash())
	trace(e.type) ;
	
	wproxy.setTimeout(function(){
		
		var box = $('<div id="proxyexample">').addClass('abs zindex10 top0 right0 left0 padding whiteBG red').appendTo('.frame')[0] ;
		
		var s = new Proxy(box) ;
		trace(s)
		s.innerHTML('!!! SUCCESS !!!') ;
	
	}, 30) ;
})
